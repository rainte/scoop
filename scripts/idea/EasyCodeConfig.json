{
  "author" : "Sean",
  "version" : "1.2.8",
  "userSecure" : "",
  "currTypeMapperGroupName" : "Default",
  "currTemplateGroupName" : "Rainte1.8",
  "currColumnConfigGroupName" : "Default",
  "currGlobalConfigGroupName" : "Default",
  "typeMapper" : { },
  "template" : {
    "Rainte1.8" : {
      "name" : "Rainte1.8",
      "elementList" : [ {
        "name" : "po",
        "code" : "##导入宏定义\n$!{define.vm}\n\n##保存文件（宏定义）\n#save(\"/domain/po\", \".java\")\n\n##包路径（宏定义）\n#setPackageSuffix(\"domain.po\")\n\n##自动导入包（全局变量）\n$!{autoImport.vm}\nimport com.baomidou.mybatisplus.annotation.*;\nimport com.baomidou.mybatisplus.extension.activerecord.Model;\nimport lombok.Data;\n\n##表注释（宏定义）\n#tableComment(\"表实体类\")\n@Data\n@TableName(\"$!{tableInfo.obj.name}\")\npublic class $!{tableInfo.name} extends Model<$!{tableInfo.name}> {\n#foreach($column in $tableInfo.fullColumn)\n    #if(${column.comment})    // ${column.comment}\n#end\n    #if($tableInfo.pkColumn.contains($column))\n    @TableId(value = \"$!{column.obj.name}\", type = IdType.AUTO)\n    #else\n    @TableField(\"$!{column.obj.name}\")\n    #end\n    #if($column.obj.name.equals('ID'))    @TableLogic\n#end\n    private $!{tool.getClsNameByFullName($column.type)} $!{column.name};\n#end\n}"
      }, {
        "name" : "dto",
        "code" : "##导入宏定义\n$!{define.vm}\n\n##设置表后缀（宏定义）\n#setTableSuffix(\"DTO\")\n\n##保存文件（宏定义）\n#save(\"/domain/dto\", \"DTO.java\")\n\n##包路径（宏定义）\n#setPackageSuffix(\"domain.dto\")\n\n##自动导入包（全局变量）\n$!{autoImport.vm}\nimport java.io.Serializable;\nimport lombok.Data;\n\n##表注释（宏定义）\n#tableComment(\"表实体类\")\n@Data\npublic class $!{tableName} implements Serializable {\n#foreach($column in $tableInfo.fullColumn)\n    #if(${column.comment})    // ${column.comment}\n#end\n    private $!{tool.getClsNameByFullName($column.type)} $!{column.name};\n#end\n}"
      }, {
        "name" : "dao",
        "code" : "##导入宏定义\n$!{define.vm}\n\n##设置表后缀（宏定义）\n#setTableSuffix(\"Dao\")\n\n##保存文件（宏定义）\n#save(\"/dao\", \"Dao.java\")\n\n##包路径（宏定义）\n#setPackageSuffix(\"dao\")\n\nimport com.github.yulichang.base.MPJBaseMapper;\nimport $!{tableInfo.savePackageName}.domain.po.$!tableInfo.name;\n\n##表注释（宏定义）\n#tableComment(\"表数据库访问层\")\npublic interface $!{tableName} extends MPJBaseMapper<$!tableInfo.name> {\n}"
      }, {
        "name" : "service",
        "code" : "##导入宏定义\n$!{define.vm}\n\n##设置表后缀（宏定义）\n#setTableSuffix(\"Service\")\n\n##保存文件（宏定义）\n#save(\"/service\", \"Service.java\")\n\n##包路径（宏定义）\n#setPackageSuffix(\"service\")\n\nimport $!{tableInfo.savePackageName}.dao.$!{tableInfo.name}Dao;\nimport $!{tableInfo.savePackageName}.domain.dto.$!{tableInfo.name}DTO;\nimport $!{tableInfo.savePackageName}.domain.po.$!tableInfo.name;\nimport com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;\nimport com.baomidou.mybatisplus.core.metadata.IPage;\nimport com.baomidou.mybatisplus.core.toolkit.Wrappers;\nimport com.baomidou.mybatisplus.extension.plugins.pagination.Page;\nimport com.github.yulichang.base.MPJBaseServiceImpl;\nimport org.springframework.beans.BeanUtils;\nimport org.springframework.stereotype.Service;\nimport org.springframework.transaction.annotation.Transactional;\n\nimport javax.annotation.Resource;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.stream.Collectors;\n\n##表注释（宏定义）\n#tableComment(\"表数据库服务层\")\n@Service\npublic class $!{tableName} extends MPJBaseServiceImpl<$!{tableInfo.name}Dao, $!tableInfo.name> {\n\n    @Resource\n    private $!{tableInfo.name}Dao $tool.firstLowerCase($!tableInfo.name)Dao;\n\n    public Long add($!{tableInfo.name}DTO dto) {\n        $!{tableInfo.name} bean = new $!{tableInfo.name}();\n        BeanUtils.copyProperties(dto, bean);\n        $tool.firstLowerCase($!tableInfo.name)Dao.insert(bean);\n        return bean.getId();\n    }\n\n    public $!{tableInfo.name}DTO get(Long id) {\n        $!{tableInfo.name} raw = $tool.firstLowerCase($!tableInfo.name)Dao.selectById(id);\n        return toDTO(raw);\n    }\n\n    public void set($!{tableInfo.name}DTO dto) {\n        $!{tableInfo.name} bean = new $!{tableInfo.name}();\n        BeanUtils.copyProperties(dto, bean);\n        int affectRows = $tool.firstLowerCase($!tableInfo.name)Dao.updateById(bean);\n        if (affectRows == 0) {\n            throw new RuntimeException(\"更新失败.\");\n        }\n    }\n\n    @Transactional\n    public void del(List<Long> ids) {\n        int affectRows = $tool.firstLowerCase($!tableInfo.name)Dao.deleteBatchIds(ids);\n        if (affectRows != ids.size()) {\n            throw new RuntimeException(\"删除失败.\");\n        }\n    }\n\n    public List<$!{tableInfo.name}DTO> list($!{tableInfo.name}DTO dto) {\n        $!{tableInfo.name} bean = new $!{tableInfo.name}();\n        BeanUtils.copyProperties(dto, bean);\n        LambdaQueryWrapper<$!{tableInfo.name}> wrapper = Wrappers.lambdaQuery();\n        wrapper.eq(dto.getId() != null, $!{tableInfo.name}::getId, dto.getId());\n        List<$!{tableInfo.name}> raw = $tool.firstLowerCase($!tableInfo.name)Dao.selectList(wrapper);\n\n        List<$!{tableInfo.name}DTO> res = new ArrayList<>();\n        BeanUtils.copyProperties(raw, res);\n        return res;\n    }\n\n    public IPage<$!{tableInfo.name}DTO> query($!{tableInfo.name}DTO dto) {\n        IPage<$!{tableInfo.name}> page = new Page<>(dto.getPageNum(), dto.getPageSize());\n        LambdaQueryWrapper<$!{tableInfo.name}> wrapper = Wrappers.lambdaQuery();\n        wrapper.eq(dto.getId() != null, $!{tableInfo.name}::getId, dto.getId());\n        IPage<$!{tableInfo.name}> raw = $tool.firstLowerCase($!tableInfo.name)Dao.selectPage(page, wrapper);\n\n        Page<$!{tableInfo.name}DTO> res = new Page<>(raw.getCurrent(), raw.getSize(), raw.getTotal());\n        res.setPages(raw.getPages());\n        res.setRecords(page.getRecords().stream().map(this::toDTO).collect(Collectors.toList()));\n        return res;\n    }\n\n    private $!{tableInfo.name}DTO toDTO($!{tableInfo.name} raw) {\n        $!{tableInfo.name}DTO bean = new $!{tableInfo.name}DTO();\n        BeanUtils.copyProperties(raw, bean);\n        return bean;\n    }\n}"
      }, {
        "name" : "controller",
        "code" : "##导入宏定义\n$!{define.vm}\n\n##设置表后缀（宏定义）\n#setTableSuffix(\"Controller\")\n\n##保存文件（宏定义）\n#save(\"/controller\", \"Controller.java\")\n\n##包路径（宏定义）\n#setPackageSuffix(\"controller\")\n\nimport $!{tableInfo.savePackageName}.domain.dto.$!{tableInfo.name}DTO;\nimport $!{tableInfo.savePackageName}.service.$!{tableInfo.name}Service;\nimport com.baomidou.mybatisplus.core.metadata.IPage;\nimport org.springframework.web.bind.annotation.PostMapping;\nimport org.springframework.web.bind.annotation.RequestBody;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\nimport javax.annotation.Resource;\nimport java.util.List;\n\n##表注释（宏定义）\n#tableComment(\"表数据库控制层\")\n@RestController\n@RequestMapping(\"/$tool.firstLowerCase($!tableInfo.name)\")\npublic class $!{tableName} {\n\n    @Resource\n    private $!{tableInfo.name}Service $tool.firstLowerCase($!tableInfo.name)Service;\n\n    @PostMapping(\"add\")\n    public Long add(@RequestBody $!{tableInfo.name}DTO dto) {\n        return $tool.firstLowerCase($!tableInfo.name)Service.add(dto);\n    }\n\n    @PostMapping(\"get\")\n    public $!{tableInfo.name}DTO get(@RequestBody Long id) {\n        return $tool.firstLowerCase($!tableInfo.name)Service.get(id);\n    }\n\n    @PostMapping(\"set\")\n    public void set(@RequestBody $!{tableInfo.name}DTO dto) {\n        $tool.firstLowerCase($!tableInfo.name)Service.set(dto);\n    }\n\n    @PostMapping(\"del\")\n    public void del(@RequestBody List<Long> ids) {\n        $tool.firstLowerCase($!tableInfo.name)Service.del(ids);\n    }\n\n    @PostMapping(\"list\")\n    public List<$!{tableInfo.name}DTO> list(@RequestBody $!{tableInfo.name}DTO dto) {\n        return $tool.firstLowerCase($!tableInfo.name)Service.list(dto);\n    }\n\n    @PostMapping(\"query\")\n    public IPage<$!{tableInfo.name}DTO> query(@RequestBody $!{tableInfo.name}DTO dto) {\n        return $tool.firstLowerCase($!tableInfo.name)Service.query(dto);\n    }\n}"
      } ]
    }
  },
  "columnConfig" : { },
  "globalConfig" : { }
}